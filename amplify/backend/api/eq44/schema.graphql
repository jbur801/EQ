type Conversation @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  AwfulPhrases: [AwfulPhrase] @hasMany(indexName: "byConversation", fields: ["id"])
  Users: [User] @manyToMany(relationName: "ConversationUser")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String
  AwfulPhrases: [AwfulPhrase] @hasMany(indexName: "byUser", fields: ["id"])
  conversations: [Conversation] @manyToMany(relationName: "ConversationUser")
}

type AwfulPhrase @model @auth(rules: [{allow: public}]) {
  id: ID!
  phrase: String!
  userID: ID! @index(name: "byUser", sortKeyFields: ["createdAt"])
  conversationID: ID! @index(name: "byConversation", sortKeyFields: ["createdAt"])
  type: String! @index(name: "awfulPhrasesByDate", queryField: "awfulPhrasesByDate", sortKeyFields: ["createdAt"])
  createdAt: String!
}

type nicePhrase @model @auth(rules: [{allow: public}]) {
  id: ID!
  phrase: String!
}
 